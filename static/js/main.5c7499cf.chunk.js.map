{"version":3,"sources":["components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","redux/types.js","components/BudgetForm/BudgetForm.js","redux/budget/budgetActions.js","components/ExpenseForm/ExpenseForm.js","redux/budget/budgetSelector.js","components/ExpensesTable/ExpensesTable.js","components/Value/Value.js","components/Values/Values.js","components/App.js","redux/rootReducer.js","redux/budget/budgetReducers.js","redux/store.js","index.js"],"names":["StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","type","value","onChange","name","StyledButton","button","Button","onClick","types","ADD_BUDGET","SAVE_BUDGET","DELETE_BUDGET","BudgetForm","state","budget","handleChange","e","setState","Number","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","payload","saveBudget","ExpenseForm","amount","id","shortid","generate","expence","addBudget","getBudget","store","getExpence","expences","calculateTotalExpenses","reduce","total","Table","table","items","deleteB","deleteBudget","map","key","Container","div","isPositive","p","Amount","Value","section","balance","rootReducer","combineReducers","action","filter","el","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c7499cf.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nForm.propTypes = {\n  children: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nexport default Button;\n","const types = {\n  ADD_BUDGET: 'ADD_BUDGET',\n\n  SAVE_BUDGET: 'SAVE_BUDGET',\n\n  DELETE_BUDGET: 'DELETE_BUDGET',\n};\n\nexport default types;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\nimport { saveBudget } from '../../redux/budget/budgetActions';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  state = {\n    budget: '',\n  };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: Number(e.target.value),\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { budget } = this.state;\n    const { onSave } = this.props;\n\n    onSave(budget);\n    this.setState({ budget: '' });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(saveBudget(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import types from '../types';\n\nexport const addBudget = expence => ({\n  type: types.ADD_BUDGET,\n  payload: {\n    expence,\n  },\n});\n\nexport const saveBudget = budget => ({\n  type: types.SAVE_BUDGET,\n  payload: {\n    budget,\n  },\n});\n\nexport const deleteBudget = id => ({\n  type: types.DELETE_BUDGET,\n  payload: {\n    id,\n  },\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport Form from '../shared/Form';\nimport Label from '../shared/Label';\nimport Input from '../shared/Input';\nimport Button from '../shared/Button';\n// import { saveBudget } from '../../redux/budget/budgetActions';\nimport { addBudget } from '../../redux/budget/budgetActions';\n// import generate from '@babel/generator';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n  };\n\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSave } = this.props;\n    const { name, amount } = this.state;\n    onSave({ name, amount: Number(amount), id: shortid.generate() });\n\n    this.setState({ name: '', amount: '' });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: expence => dispatch(addBudget(expence)),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\n","export const getBudget = store => store.budget;\n\nexport const getExpence = store => store.expences;\n\nexport const calculateTotalExpenses = store => {\n  return getExpence(store).reduce(\n    (total, expence) => total + expence.amount,\n    0,\n  );\n};\n\nexport const calculateBalance = store =>\n  getBudget(store) - calculateTotalExpenses(store);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Button from '../shared/Button';\nimport { deleteBudget } from '../../redux/budget/budgetActions';\nimport { getExpence } from '../../redux/budget/budgetSelector';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], deleteB }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => deleteB(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  deleteB: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({ items: getExpence(state) });\n\nconst mapDispatchToProps = dispatch => ({\n  deleteB: id => dispatch(deleteBudget(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\n\nexport default Value;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Value from '../Value/Value';\nimport {\n  calculateTotalExpenses,\n  calculateBalance,\n  getBudget,\n} from '../../redux/budget/budgetSelector';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expence, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expence} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nconst mapStateToProps = state => ({\n  balance: calculateBalance(state),\n  expence: calculateTotalExpenses(state),\n  budget: getBudget(state),\n});\n\nexport default connect(mapStateToProps)(Values);\n\nValues.propTypes = {\n  budget: PropTypes.number.isRequired,\n  expence: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\n// import shortid from 'shortid';\nimport BudgetForm from './BudgetForm/BudgetForm';\nimport ExpenseForm from './ExpenseForm/ExpenseForm';\nimport ExpensesTable from './ExpensesTable/ExpensesTable';\nimport Values from './Values/Values';\nimport { getExpence } from '../redux/budget/budgetSelector';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = () => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      <ExpensesTable />\n    </Container>\n  );\n};\n\nconst mapStateToProps = store => ({\n  expences: getExpence(store),\n});\n\nApp.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n};\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from 'redux';\nimport { budgetReducer, expencesReducer } from './budget/budgetReducers';\n\nconst rootReducer = combineReducers({\n  budget: budgetReducer,\n  expences: expencesReducer,\n});\n\nexport default rootReducer;\n","import types from '../types';\n\nexport const budgetReducer = (state = 0, action) => {\n  switch (action.type) {\n    case types.SAVE_BUDGET:\n      return state + action.payload.budget;\n\n    default:\n      return state;\n  }\n};\n\nexport const expencesReducer = (state = [], action) => {\n  switch (action.type) {\n    case types.ADD_BUDGET:\n      return [...state, action.payload.expence];\n\n    case types.DELETE_BUDGET:\n      return state.filter(el => el.id !== action.payload.id);\n\n    default:\n      return state;\n  }\n};\n","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport store from './redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}